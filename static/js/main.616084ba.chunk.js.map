{"version":3,"sources":["helpers/storage.js","redux/Actions/PhoneBookActions.js","redux/Reducers/PhoneBookReducer.js","redux/Store/PhoneBookStore.js","redux/Reducers/FilterReducer.js","helpers/validation.js","Components/Form/FormFormik.js","Components/ContactsItem/ContactListItem.js","Components/ContactsList/ContactsList.js","Components/ContactsFilter/ContactsFilterForm.js","Components/PhoneBook/PhoneBook.js","Components/PhoneBook/PhoneBookContainer.js","App.js","index.js","Components/Form/Form.module.css","animations/slide.module.css","Components/ContactsItem/ContactListItem.module.css","Components/ContactsList/list.module.css","Components/ContactsFilter/ContactsFilter.module.css"],"names":["key","value","localStorage","setItem","JSON","stringify","err","Error","items","getItem","parse","addItem","createAction","deleteItem","filterContacts","event","payload","target","initialState","contactsData","storage","createReducer","rootReducer","contacts","state","action","filter","contact","id","store","configureStore","reducer","devTools","process","BasicFormSchema","Yup","shape","name","min","max","required","number","matches","FormFormik","initialValues","uuidv4","validationSchema","onSubmit","values","resetForm","handleChange","handleSubmit","type","onChange","className","styles","input","placeholder","msg","errorMessage","button","ContactListItem","deleteContact","wrapper","deleteBtn","onClick","ContactsList","contactList","TransitionGroup","component","list","map","CSSTransition","classNames","slideTransition","timeout","mountOnEnter","unmountOnExit","item","reverse","ContactsFilterForm","handleFilter","style","PhoneBook","this","setState","didMount","prevProps","prevState","props","filteredContacts","el","toLowerCase","includes","in","enter","exit","length","Component","mapDispatchToProps","connect","App","PhoneBookContainer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.616084ba.chunk.js","sourcesContent":["const save = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nconst get = (key) => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (err) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport default {\r\n  save,\r\n  get,\r\n};\r\n","// import { ADD_ITEM, DELETE_ITEM, FILTER_CONTACTS } from \"../Types/index\";\r\nimport { createAction } from \"@reduxjs/toolkit\";\r\n\r\nexport const addItem = createAction(\"item/add\");\r\nexport const deleteItem = createAction(\"item/delete\");\r\nexport const filterContacts = createAction(\"contacts/filter\", function prepare(\r\n  event\r\n) {\r\n  return {\r\n    payload: event.target.value,\r\n  };\r\n});\r\n\r\n// export const filterContacts = (event) => ({\r\n//   type: FILTER_CONTACTS,\r\n//   payload: event.target.value,\r\n// });\r\n\r\n// export const deleteItem = (id) => ({\r\n//   type: DELETE_ITEM,\r\n//   payload: id,\r\n// });\r\n\r\n// export const addItem = (contact) => ({\r\n//   type: ADD_ITEM,\r\n//   payload: contact,\r\n// });\r\n","// import { ADD_ITEM, DELETE_ITEM } from \"../Types\";\r\nimport storage from \"../../../src/helpers/storage\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { addItem, deleteItem } from \"../Actions/PhoneBookActions\";\r\n\r\nlet initialState = [];\r\nconst contactsData = storage.get(\"contacts\");\r\nif (contactsData) {\r\n  initialState = contactsData;\r\n}\r\nexport default createReducer(initialState, {\r\n  [addItem]: (state, action) => [...state, action.payload],\r\n  [deleteItem]: (state, action) =>\r\n    state.filter((contact) => contact.id !== action.payload),\r\n});\r\n\r\n// const initialState = [];\r\n\r\n// export default (state = initialState, action) => {\r\n//   const contactsData = storage.get(\"contacts\");\r\n//   if (contactsData) {\r\n//     state = contactsData;\r\n//   }\r\n//   switch (action.type) {\r\n//     case ADD_ITEM:\r\n//       return [...state, action.payload];\r\n//     case DELETE_ITEM:\r\n//       return state.filter((contact) => contact.id !== action.payload);\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","// import { createStore } from \"redux\";\r\n// import { devToolsEnhancer } from \"redux-devtools-extension\";\r\n// import rootReducer from \"../Reducers/index\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\nimport PhoneBookReducer from \"../Reducers/PhoneBookReducer\";\r\nimport FilterReducer from \"../Reducers/FilterReducer\";\r\n\r\nconst rootReducer = {\r\n  contacts: PhoneBookReducer,\r\n  filter: FilterReducer,\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  devTools: process.env.NODE_ENV !== \"production\",\r\n});\r\n\r\n// const store = createStore(rootReducer, devToolsEnhancer());\r\n\r\nexport default store;\r\n","// import { FILTER_CONTACTS } from \"../Types/index\";\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\nimport { filterContacts } from \"../Actions/PhoneBookActions\";\r\n\r\nexport default createReducer(\"\", {\r\n  [filterContacts]: (state, action) => (state = action.payload),\r\n});\r\n\r\n// const initialState = \"\";\r\n// export default (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case FILTER_CONTACTS:\r\n//       return (state = action.payload);\r\n\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n","import * as Yup from \"yup\";\r\n\r\nconst BasicFormSchema = Yup.object().shape({\r\n  name: Yup.string()\r\n    .min(2, \"Must be longer than 2 characters\")\r\n    .max(20, \"Nice try, nobody has a first name that long\")\r\n    .required(\"Enter a name\"),\r\n  number: Yup.string()\r\n    .min(8, \"Must be longer than 8 characters\")\r\n    .matches(/([0-9]{8})/, \"must be a digits\")\r\n    .required(\"Enter a number\"),\r\n});\r\n\r\nexport default BasicFormSchema;\r\n","// import React, { Component } from \"react\";\r\n// import { Formik, Field, Form } from \"formik\";\r\n// import BasicFormSchema from \"../../helpers/validation\";\r\n// import styles from \"./Form.module.css\";\r\n// import { v4 as uuidv4 } from \"uuid\"; // uuidv4()\r\n\r\n// export default class FormFormik extends Component {\r\n//   state = {\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleNameChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleNumberChange = (e) => {\r\n//     const { name, value } = e.target;\r\n//     this.setState({ [name]: value });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     // e.preventDefault();\r\n//     const newContact = {\r\n//       id: uuidv4(),\r\n//       name: this.state.name,\r\n//       number: this.state.number,\r\n//     };\r\n//     this.props.addItem(newContact);\r\n//     this.setState({\r\n//       name: \"\",\r\n//       number: \"\",\r\n//     });\r\n//   };\r\n//   render() {\r\n//     const { name, number } = this.state;\r\n//     const initialValues = this.state;\r\n//     console.log(name, number);\r\n//     return (\r\n//       <Formik\r\n//         initialValues={initialValues}\r\n//         validationSchema={BasicFormSchema}\r\n//         onSubmit={this.handleSubmit}\r\n//       >\r\n//         {({ errors, touched }) => (\r\n//           <Form className={styles.form}>\r\n//             <Field\r\n//               type=\"text\"\r\n//               name=\"name\"\r\n//               value={name}\r\n//               onChange={this.handleNameChange}\r\n//               className={styles.input}\r\n//             />\r\n\r\n//             {errors.name && touched.name && <div>{errors.name}</div>}\r\n\r\n//             <Field\r\n//               type=\"text\"\r\n//               name=\"number\"\r\n//               value={number}\r\n//               onChange={this.handleNumberChange}\r\n//               className={styles.input}\r\n//             />\r\n\r\n//             {errors.number && touched.number && <div>{errors.number}</div>}\r\n\r\n//             <button\r\n//               type=\"submit\"\r\n//               // onClick={this.handleSubmit}\r\n//             >\r\n//               Submit\r\n//             </button>\r\n//           </Form>\r\n//         )}\r\n//       </Formik>\r\n//     );\r\n//   }\r\n// }\r\nimport React from \"react\";\r\nimport { Formik, ErrorMessage } from \"formik\";\r\nimport BasicFormSchema from \"../../helpers/validation\";\r\nimport styles from \"./Form.module.css\";\r\nimport { v4 as uuidv4 } from \"uuid\"; // uuidv4()\r\n\r\nexport default function FormFormik({ addItem }) {\r\n  const initialValues = {\r\n    id: uuidv4(),\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n  const handleSubmit = (values, { resetForm }) => {\r\n    addItem({ ...values });\r\n    resetForm({});\r\n  };\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={BasicFormSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({ values, handleChange, handleSubmit }) => (\r\n        <form onSubmit={handleSubmit}>\r\n          <input\r\n            type=\"text\"\r\n            value={values.name}\r\n            onChange={handleChange}\r\n            name=\"name\"\r\n            className={styles.input}\r\n            placeholder=\"Enter name\"\r\n          />\r\n          <ErrorMessage name=\"name\">\r\n            {(msg) => <div className={styles.errorMessage}>{msg}</div>}\r\n          </ErrorMessage>\r\n\r\n          <input\r\n            type=\"text\"\r\n            value={values.number}\r\n            onChange={handleChange}\r\n            name=\"number\"\r\n            className={styles.input}\r\n            placeholder=\"Enter number\"\r\n          />\r\n          <ErrorMessage name=\"number\">\r\n            {(msg) => <div className={styles.errorMessage}>{msg}</div>}\r\n          </ErrorMessage>\r\n\r\n          <button className={styles.button} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport styles from \"./ContactListItem.module.css\";\r\nconst ContactListItem = ({ contact, name, number, deleteContact }) => {\r\n  return (\r\n    <li className={styles.wrapper}>\r\n      {name}: {number}\r\n      <button\r\n        className={styles.deleteBtn}\r\n        onClick={() => deleteContact(contact.id)}\r\n      >\r\n        🞫\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport ContactListItem from \"../ContactsItem/ContactListItem\";\r\nimport PropTypes from \"prop-types\"; // ES6\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport styles from \"./list.module.css\";\r\nimport slideTransition from \"../../animations/slide.module.css\";\r\n\r\nconst ContactsList = ({ contactList, deleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.list}>\r\n    {contactList\r\n      .map((contact) => (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          classNames={slideTransition}\r\n          timeout={500}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <ContactListItem\r\n            name={contact.name}\r\n            number={contact.number}\r\n            deleteContact={deleteContact}\r\n            contact={contact}\r\n            className={styles.item}\r\n          />\r\n        </CSSTransition>\r\n      ))\r\n      .reverse()}\r\n  </TransitionGroup>\r\n);\r\n\r\nContactsList.propTypes = {\r\n  contactsList: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      number: PropTypes.string,\r\n    })\r\n  ),\r\n  deleteContact: PropTypes.func,\r\n};\r\nexport default ContactsList;\r\n","import React from \"react\";\r\nimport style from \"./ContactsFilter.module.css\";\r\n\r\nconst ContactsFilterForm = ({ handleFilter }) => {\r\n  return (\r\n    <form className={style.wrapper}>\r\n      <p>Find contact by name</p>\r\n      <input type=\"text\" onChange={handleFilter} />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default ContactsFilterForm;\r\n","import React, { Component } from \"react\";\r\n// import Form from \"../Form/Form\";\r\nimport FormFormik from \"../Form/FormFormik\";\r\n\r\nimport ContactsList from \"../ContactsList/ContactsList\";\r\nimport ContactsFilterForm from \"../ContactsFilter/ContactsFilterForm\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport storage from \"../../helpers/storage\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport slideTransition from \"../../animations/slide.module.css\";\r\n\r\nclass PhoneBook extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    this.setState({ didMount: true });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    storage.save(\"contacts\", this.props.contacts);\r\n  }\r\n\r\n  render() {\r\n    const { didMount } = this.state;\r\n    const { contacts, filter } = this.props;\r\n    const filteredContacts = contacts.filter((el) =>\r\n      el.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n    return (\r\n      <>\r\n        <CSSTransition\r\n          in={didMount}\r\n          classNames={slideTransition}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n          mountOnEnter\r\n        >\r\n          <h2 className=\"title-phonebook\">Phonebook</h2>\r\n        </CSSTransition>\r\n        {/* <Form contacts={contacts} addItem={this.props.addItem} /> */}\r\n        <FormFormik contacts={contacts} addItem={this.props.addItem} />\r\n        <h2>Contacts</h2>\r\n\r\n        <CSSTransition\r\n          in={contacts.length >= 2}\r\n          classNames={slideTransition}\r\n          timeout={{ enter: 500, exit: 500 }}\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <ContactsFilterForm handleFilter={this.props.filterContacts} />\r\n        </CSSTransition>\r\n\r\n        <ContactsList\r\n          contactList={filteredContacts}\r\n          deleteContact={this.props.deleteItem}\r\n        />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PhoneBook;\r\n","import PhoneBook from \"./PhoneBook\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  addItem,\r\n  deleteItem,\r\n  filterContacts,\r\n} from \"../../redux/Actions/PhoneBookActions\";\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: state.contacts,\r\n  filter: state.filter,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  addItem,\r\n  deleteItem,\r\n  filterContacts,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneBook);\r\n","import React from \"react\";\nimport PhoneBookContainer from \"./Components/PhoneBook/PhoneBookContainer\";\nimport \"./App.css\";\n\nconst App = () => {\n  return (\n    <>\n      <PhoneBookContainer />\n    </>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/Store/PhoneBookStore\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2z26W\",\"name\":\"Form_name__3Ssio\",\"input\":\"Form_input__2xarV\",\"button\":\"Form_button__1Y0bx\",\"errorMessage\":\"Form_errorMessage__8tOcD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__-FaUU\",\"enterActive\":\"slide_enterActive__JI3df\",\"exit\":\"slide_exit__h4C50\",\"exitActive\":\"slide_exitActive__2pQji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactListItem_wrapper__3SVCI\",\"deleteBtn\":\"ContactListItem_deleteBtn__1xaXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"list_list__kFxa5\",\"item\":\"list_item__1y5L-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsFilter_wrapper__3xf4W\"};"],"sourceRoot":""}